[{"content":"Undoubtedly, the Covid-19 crisis has changed students’ habits a lot. Old habits, such as hanging out, drinking beers, watching movies and even studying together have almost torn apart since most countries are experiencing the second Coronavirus wave.\nAs a student, I decided to take advantage of the time gained from the situation to work on myself, my skills and my academic performance. Especially when the University’s workload increases, keeping yourself disciplined and focused on your goals becomes even harder.\nDuring these times, working in a study group is really helpful. Working as a team with your fellow students helps you maintain your focus and motivation. Even the days you don’t feel like studying, although you need to, your team encourages you to keep on completing your tasks. Also, the whole team gets the advantage of each individual’s strengths. Usually, students tend to like some courses more than others. Using this, team members help each other and save valuable time and effort from browsing through course’s notes in Elearning platform.\nChoosing the right platform that best suits your needs is crucial. My group prefers Google Meet. We consider it as the most stable and user-friendly free video calling software right now. Occasionally, we also use Skype, Zoom, Messenger or Discord.\nI need additionally to mention the socialising part of group studying. Social distancing will last for some more months at least, socialising even virtually, is crucial for student’s mental health. As shown in the pie chart, communicating with your teammates for extracurricular activities is a main part of this, helping students to keep their social life balanced. Also, after completing your coursework you can work on your hobbies, such as side projects or gaming.\nTo conclude, although this chart seems to be very descriptive: the small percentage of “actually studying” time is so efficient that it is worth giving a try to make a study group.\nThe article is also published on Medium https://menelaoskotoglou.medium.com/the-power-of-study-groups-e1312b6b193d\n","permalink":"https://koti3.gitlab.io/personal-website/blog/the-power-of-study-groups/","summary":"Undoubtedly, the Covid-19 crisis has changed students’ habits a lot. Old habits, such as hanging out, drinking beers, watching movies and even studying together have almost torn apart since most countries are experiencing the second Coronavirus wave.\nAs a student, I decided to take advantage of the time gained from the situation to work on myself, my skills and my academic performance. Especially when the University’s workload increases, keeping yourself disciplined and focused on your goals becomes even harder.","title":"The Power Of Study Groups"},{"content":"The project is based on a “profanity-check” library created by Victor Zhou. You can read more about it here and find it online here: https://github.com/vzhou842/profanity-check. Firstly, we installed the library in a virtual environment and experimented with different samples.\nWe tested the model with an internal dataset consisting of 850 tweets retrieved through Twitter’s sampling API then labeled manually. This produced the following results:\nConfusion Matrix\n   ActualPredicted Not Profane (0) Profane (1)     Not Profane (0) 703 14   Profane (1) 93 39    Accuracy Score: 87.4%\nThe issue that came up is that with newer Python and scikit-learn versions a list of warnings was thrown when including the library. Library’s dependencies were gradually deprecated and we had to update them making them compatible with newer versions of Python and scikit-learn. This is important because at any given point in time new releases of these libraries might not be able to deserialize the joblib’ed (alternative to pickle) file stored with the library.\nAs the library’s documentation states https://scikit-learn.org/stable/modules/model_persistence.html :\n“… pickle (and joblib by extension), has some issues regarding maintainability and security. Because of this,\nNever unpickle untrusted data as it could lead to malicious code being executed upon loading. While models saved using one version of scikit-learn might load in other versions, this is entirely unsupported and inadvisable. It should also be kept in mind that operations performed on such data could give different and unexpected results.”\nThis was not happening in this case as the original author had provided the input dataset and the serialised model files, but not the script to create them from these data. For this, I installed Python3.8 and scikit-learn 0.23.1. After lots of experiments, I substituted CountVectorizer from Victor Zhou’s blog post with TfidfVectorizer, trained the model based on the “clean_data.csv” from which the initial version was trained with and got roughly the same accuracy score as the previous model had. In detail:\nConfusion Matrix\n   ActualPredicted Not Profane (0) Profane (1)     Not Profane (0) 697 20   Profane (1) 87 45    Accuracy Score: 87.4%\nWorking on this project helped me to:\n Enhance my Python and scikit-learn knowledge. Work with pandas, NumPy, and Joblib libraries. Get familiar with open source development workflows. Use git working alongside with another collaborator to solve a problem.  The biggest surprise was a versioning issue that came up. Specifically, I had to find a way to update the model in a version compatible with Python3.8 since the current model’s scikit-learn version was not compatible with that version. Fortunately scikit-learn 0.23.1 works with Python3.8 hence chose this version.\nOverall, It’s been a great experience. I was able to use my academic knowledge to solve a real world problem. Also I was lucky to be supervised and mentored by Dimitrios, yourself.online’s current CTO: was confident to speak and discuss every question that came up, even the dumbest ones. During every project’s step constant and immediate feedback was provided.\nMy model is currently used in production as committed in the fork here: https://github.com/dimitrismistriotis/profanity-check. Changes have also been submitted to the original library: https://github.com/vzhou842/profanity-check/pull/19. As stated the model is used as part of the content classification checks that happen within yourself.online’s service which is available here: https://www.yourself.online.\n","permalink":"https://koti3.gitlab.io/personal-website/blog/updating-an-important-but-stale-python-library/","summary":"The project is based on a “profanity-check” library created by Victor Zhou. You can read more about it here and find it online here: https://github.com/vzhou842/profanity-check. Firstly, we installed the library in a virtual environment and experimented with different samples.\nWe tested the model with an internal dataset consisting of 850 tweets retrieved through Twitter’s sampling API then labeled manually. This produced the following results:\nConfusion Matrix\n   ActualPredicted Not Profane (0) Profane (1)     Not Profane (0) 703 14   Profane (1) 93 39    Accuracy Score: 87.","title":"Updating an important but stale Python library"},{"content":"I am an ambitious and highly motivated student. A keen learner who loves and follows new technology trends. Highly interested in Data Science, Machine Learning, and Software Development. I am continually looking for interesting open-source projects to contribute.\nAdditionally, I have a great passion for milk chocolate and travelling.\nSkills  Languages  Python SQL | MySQL Java HTML | CSS | JavaScript Familliar with PHP Familliar with Golang   Libraries  Pandas NumPy   Frameworks  Scikit-Learn Familliar with TensorFlow Familliar with Django Familliar with Laravel   Other Skills  Version-control (Git) Open-source development workflows Pelican | Static Site Generator Hugo | Static Site Generator Markdown  Education  Bachelor of Engineering - BE, Computer Engineering and Informatics\n2018 - Present\n","permalink":"https://koti3.gitlab.io/personal-website/about/","summary":"I am an ambitious and highly motivated student. A keen learner who loves and follows new technology trends. Highly interested in Data Science, Machine Learning, and Software Development. I am continually looking for interesting open-source projects to contribute.\nAdditionally, I have a great passion for milk chocolate and travelling.\nSkills  Languages  Python SQL | MySQL Java HTML | CSS | JavaScript Familliar with PHP Familliar with Golang   Libraries  Pandas NumPy   Frameworks  Scikit-Learn Familliar with TensorFlow Familliar with Django Familliar with Laravel   Other Skills  Version-control (Git) Open-source development workflows Pelican | Static Site Generator Hugo | Static Site Generator Markdown  Education  Bachelor of Engineering - BE, Computer Engineering and Informatics","title":"About Me"},{"content":" Feel free to contact me. I am continually looking for feedback, tips, and comments to get better. You can also reach out to me for collaborations.\nMy email: menelaoskotoglou@gmail.com\nYou can also contact me through my social media accounts.\n","permalink":"https://koti3.gitlab.io/personal-website/contact/","summary":"Feel free to contact me. I am continually looking for feedback, tips, and comments to get better. You can also reach out to me for collaborations.\nMy email: menelaoskotoglou@gmail.com\nYou can also contact me through my social media accounts.","title":"Contact Me"},{"content":" Profanity-check by Victor Zhou Contributor\n Reverse engineered training script. Updated versions of scikit-learn and included it in setup.py and requirements.txt. Retrained model with the provided training data and updated version. Dropped support for Python3.5, since it was no longer compatible with current scikit-learn version. Fixed the test suite.   Bin information parsing for Premier Payments Online Creator\n Managed multiple \u0026ldquo;.csv\u0026rdquo; files using Pandas library. Created a script to parse valuable info from various transactions done.   Feta Report website Contributor\n Cooperated with podcast\u0026rsquo;s owner to develop the website as a static site. Used Pelican static site generator.   Personal Website Creator\n This website. Created with Hugo. You can find the source code here  ","permalink":"https://koti3.gitlab.io/personal-website/projects/","summary":"Profanity-check by Victor Zhou Contributor\n Reverse engineered training script. Updated versions of scikit-learn and included it in setup.py and requirements.txt. Retrained model with the provided training data and updated version. Dropped support for Python3.5, since it was no longer compatible with current scikit-learn version. Fixed the test suite.   Bin information parsing for Premier Payments Online Creator\n Managed multiple \u0026ldquo;.csv\u0026rdquo; files using Pandas library. Created a script to parse valuable info from various transactions done.","title":"Projects"},{"content":"","permalink":"https://koti3.gitlab.io/personal-website/search/","summary":"search","title":"Search"}]